{"version":3,"sources":["webpack://HallPlan/webpack/universalModuleDefinition","webpack://HallPlan/webpack/bootstrap","webpack://HallPlan/./src/helpers.ts","webpack://HallPlan/./src/main.ts","webpack://HallPlan/./src/assets/theatre-screen.svg"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","addClass","elem","classList","add","tokens","classes","className","split","filter","length","token","indexOf","push","join","removeClass","remove","splice","options","activeSeatPos","handleMouseClick","event","seatElem","closest","selector","matches","parentNode","nodeType","Node","ELEMENT_NODE","target","seatPos","row","dataset","seat","handler","type","onSeatClick","onSeatContextMenu","selectable","setSeatActive","this","scheme","seatDirection","seatStates","rowNumbersLeft","undefined","rowNumbersRight","screenText","showScreen","el","String","document","querySelector","elemIsOur","createElement","bindEventHandlers","destroy","unbindEventHandlers","removeChild","replace","innerHTML","getRowCount","rows","getSeatCount","Error","reduce","count","seq","seats","getTotalSeatCount","getSeatStates","states","keys","stateName","setSeatStates","setSeatState","unsetSeatState","updateAllSeatStates","hasSeatState","state","updateSeatStates","toggleSeatState","getActiveSeat","isSeatActive","formerSeatPos","getMaxSeatCountInRow","max","render","rowsElem","rowNumElem","rowElem","toString","textContent","appendChild","renderRowContent","renderScreen","wrap","spacer","screen","text","totalSpacing","cellWidth","toFixed","spacingRendered","seatNumber","seatSequence","offset","j","spacerElem","style","width","seatClasses","map","unshift","spacingLeft","seatNodes","querySelectorAll","Array","slice","parseInt","addEventListener","removeEventListener"],"mappings":"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","file":"hall-plan.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hall-plan\"] = factory();\n\telse\n\t\troot[\"HallPlan\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export function closest(elem: HTMLElement, selector: string): HTMLElement {\n  if (elem === null) {\n    return null;\n  }\n  if (elem.matches(selector)) {\n    return elem;\n  }\n  if (!elem.parentNode || elem.parentNode.nodeType !== Node.ELEMENT_NODE) {\n    return null;\n  }\n  return closest(elem.parentNode as HTMLElement, selector);\n}\n\nexport function addClass(elem: HTMLElement, ...tokens: string[]): void {\n  if (elem.classList) {\n    elem.classList.add(...tokens);\n  } else {\n    const classes = elem.className.split(' ').filter(c => c.length > 0);\n    for (const token of tokens) {\n      if (classes.indexOf(token) < 0) {\n        classes.push(token);\n      }\n    }\n    elem.className = classes.join(' ');\n  }\n}\n\nexport function removeClass(elem: HTMLElement, ...tokens: string[]): void {\n  if (elem.classList) {\n    elem.classList.remove(...tokens);\n  } else {\n    const classes = elem.className.split(' ').filter(name => name.length > 0);\n    for (const token of tokens) {\n      const i = classes.indexOf(token);\n      if (i >= 0) {\n        classes.splice(i, 1);\n      }\n    }\n    elem.className = classes.join(' ');\n  }\n}\n\nexport function toggleClass(elem: HTMLElement, token: string): boolean {\n  if (elem.classList && elem.classList.toggle) {\n    return elem.classList.toggle(token);\n  } else {\n    const classes = elem.className.split(' ').filter(name => name.length > 0);\n    const i = classes.indexOf(token);\n    if (i >= 0) {\n      classes.splice(i, 1);\n    } else {\n      classes.push(token);\n    }\n    elem.className = classes.join(' ');\n  }\n}\n","import screenSvg from '!!raw-loader?!./assets/theatre-screen.svg';\nimport './hall-plan.scss';\nimport { addClass, closest, removeClass } from './helpers';\n\n/**\n * Direction of seat number growth in a row.\n * Possible values:\n * - 'rtl' = right-to-left\n * - 'ltr' = left-to-right\n */\nexport type HallPlanSeatDirection = 'rtl' | 'ltr';\n\n/**\n * Describes continuous sequence of seats in a row.\n */\nexport interface HallPlanSeatSequence {\n  /**\n   * Number of seats.\n   */\n  seats: number;\n  /**\n   * Offset from the previous sequence in the row or start of the row.\n   */\n  offset?: number;\n}\n\n/**\n * Describes a row of seats.\n */\nexport type HallPlanSeatRow = HallPlanSeatSequence[];\n\n/**\n * The objects of this class map seat state names to lists of tuples comprising\n * of row number and seat number.\n */\nexport interface HallPlanSeatStates {\n  [stateName: string]: Array<[number, number]>;\n}\n\n/**\n * Describes plan of the hall.\n */\nexport interface HallScheme {\n  /**\n   * The default direction is left-to-right (ltr).\n   */\n  seatDirection?: HallPlanSeatDirection;\n  rows: HallPlanSeatRow[];\n  seatStates?: HallPlanSeatStates;\n}\n\n/**\n * Describes seat position.\n */\nexport interface HallPlanSeatPos {\n  row: number;\n  seat: number;\n}\n\nexport type HallPlanOnSeatClickListener = (seatPos: HallPlanSeatPos, event: MouseEvent) => void;\n\nexport interface HallPlanConfig {\n  /**\n   * The main HTML element of the widget.\n   * The widget's content will be rendered into it.\n   * You may also leave this unspecified. In this case the main element will be\n   * created detached from the DOM by the widget object itself. You may use the\n   * value the render() function returns to get the element.\n   */\n  el?: string | HTMLElement;\n  /**\n   * Hall scheme ( @see HallScheme ).\n   */\n  scheme: HallScheme;\n  /**\n   * Whether to render row numbers on the left.\n   */\n  rowNumbersLeft?: boolean;\n  /**\n   * Whether to render row numbers on the right.\n   */\n  rowNumbersRight?: boolean;\n  /**\n   * Whether seats can be selected or not.\n   */\n  selectable?: boolean;\n  /**\n   * Text string displaying over the screen image (default: \"Screen\").\n   */\n  screenText?: string;\n  /**\n   * Whether to display SVG screen image (default: true).\n   */\n  showScreen?: boolean;\n  /**\n   * Fires when the user clicks on a seat with LMB.\n   */\n  onSeatClick?: HallPlanOnSeatClickListener;\n  /**\n   * Fires when the user clicks on a seat with RMB.\n   */\n  onSeatContextMenu?: HallPlanOnSeatClickListener;\n}\n\n/**\n * Hall plan widget.\n */\nexport default class HallPlan {\n  private elem: HTMLDivElement;\n  /**\n   * Whether the `elem` property has been created by us.\n   */\n  private elemIsOur: boolean;\n  private scheme: HallScheme;\n  private seatDirection: HallPlanSeatDirection;\n  private seatStates: HallPlanSeatStates;\n  private rowNumbersLeft: boolean;\n  private rowNumbersRight: boolean;\n  private selectable: boolean;\n  private screenText: string;\n  private showScreen: boolean;\n  private onSeatClick: HallPlanOnSeatClickListener;\n  private onSeatContextMenu: HallPlanOnSeatClickListener;\n  private activeSeatPos: HallPlanSeatPos = null;\n\n  constructor(options: HallPlanConfig) {\n    this.scheme = options.scheme;\n    this.seatDirection = options.scheme.seatDirection || 'ltr';\n    this.seatStates = options.scheme.seatStates || {};\n    this.rowNumbersLeft = options.rowNumbersLeft === undefined ? true : options.rowNumbersLeft;\n    this.rowNumbersRight = options.rowNumbersRight === undefined ? true : options.rowNumbersRight;\n    this.selectable = !!options.selectable;\n    this.screenText = options.screenText !== undefined ? options.screenText : 'Screen';\n    this.showScreen = options.showScreen !== undefined ? options.showScreen : true;\n    this.onSeatClick = options.onSeatClick;\n    this.onSeatContextMenu = options.onSeatContextMenu;\n    if (options.el) {\n      this.elem = (typeof options.el === 'string' || options.el instanceof String)\n        ? document.querySelector(options.el as string)\n        : options.el as HTMLDivElement;\n      this.elemIsOur = false;\n    } else {\n      this.elem = document.createElement('div');\n      this.elemIsOur = true;\n    }\n\n    this.bindEventHandlers();\n  }\n\n  /**\n   * Releases the resources taken by the widget.\n   */\n  public destroy(): void {\n    this.unbindEventHandlers();\n\n    if (this.elemIsOur && this.elem.parentNode) {\n      this.elem.parentNode.removeChild(this.elem);\n    } else if (!this.elemIsOur) {\n      this.elem.className = this.elem.className.replace('hall-plan', '');\n    }\n\n    this.elem.innerHTML = '';\n    removeClass(this.elem, 'hall-plan', 'hall-plan--rtl', 'hall-plan--ltr');\n  }\n\n  /**\n   * Returns number of rows.\n   */\n  public getRowCount(): number {\n    return this.scheme.rows.length;\n  }\n\n  /**\n   * Returns number of seats in the row.\n   *\n   * @param {integer} row Row number starting from 1.\n   */\n  public getSeatCount(row: number): number {\n    if (row <= 0 || row > this.getRowCount()) {\n      throw new Error('Row number is out of range');\n    }\n    return this.scheme.rows[row - 1].reduce((count, seq) => count + seq.seats, 0);\n  }\n\n  /**\n   * Returns total number of seats in the hall.\n   *\n   * @return {integer} Number of seats in the hall.\n   */\n  public getTotalSeatCount(): number {\n    let count = 0;\n    for (let i = 1; i <= this.getRowCount(); i++) {\n      count += this.getSeatCount(i);\n    }\n    return count;\n  }\n\n  /**\n   * Returns the list of the states of the seat.\n   *\n   * @param {integer} row Row number starting from 1.\n   * @param {integer} seat Seat number starting from 1.\n   */\n  public getSeatStates(row: number, seat: number): string[] {\n    const states: string[] = [];\n    for (const stateName of Object.keys(this.seatStates)) {\n      for (const seatPos of this.seatStates[stateName]) {\n        if (seatPos[0] === row && seatPos[1] === seat) {\n          states.push(stateName);\n          break;\n        }\n      }\n    }\n    return states;\n  }\n\n  /**\n   * Sets the list of the states of the seat.\n   *\n   * @param {integer} row Row number starting from 1.\n   * @param {integer} seat Seat number starting from 1.\n   * @param {string[]} states New state list.\n   */\n  public setSeatStates(row: number, seat: number, states: string[]): void {\n    for (const stateName of Object.keys(this.scheme.seatStates)) {\n      if (states.indexOf(stateName)) {\n        this.setSeatState(row, seat, stateName);\n      } else {\n        this.unsetSeatState(row, seat, stateName);\n      }\n    }\n    this.updateAllSeatStates();\n  }\n\n  /**\n   * Determines whether the seat has the specified state.\n   *\n   * @param {integer} row Row number starting from 1.\n   * @param {integer} seat Seat number starting from 1.\n   * @param {string} state New state name.\n   */\n  public hasSeatState(row: number, seat: number, state: string): boolean {\n    const seats = this.scheme.seatStates[state];\n    if (seats) {\n      for (const seatPos of seats) {\n        if (seatPos[0] === row && seatPos[1] === seat) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Sets the state to the seat.\n   *\n   * @param {integer} row Row number starting from 1.\n   * @param {integer} seat Seat number starting from 1.\n   * @param {string} state New state name.\n   */\n  public setSeatState(row: number, seat: number, state: string): void {\n    if (!this.hasSeatState(row, seat, state)) {\n      if (!this.scheme.seatStates[state]) {\n        this.scheme.seatStates[state] = [];\n      }\n      this.scheme.seatStates[state].push([row, seat]);\n      this.updateSeatStates(row, seat);\n    }\n  }\n\n  /**\n   * Unsets the state to the seat.\n   *\n   * @param {integer} row Row number starting from 1.\n   * @param {integer} seat Seat number starting from 1.\n   * @param {string} state New state name.\n   */\n  public unsetSeatState(row: number, seat: number, state: string): void {\n    const seats = this.scheme.seatStates[state];\n    if (seats) {\n      for (let i = 0; i < seats.length; i++) {\n        const seatPos = this.scheme.seatStates[state][i];\n        if (seatPos[0] === row && seatPos[1] === seat) {\n          seats.splice(i, 1);\n          if (seats.length === 0) {\n            delete this.scheme.seatStates[state];\n          }\n          this.updateSeatStates(row, seat);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles the state to the seat.\n   *\n   * @param {integer} row Row number starting from 1.\n   * @param {integer} seat Seat number starting from 1.\n   * @param {string} state State name.\n   */\n  public toggleSeatState(row: number, seat: number, state: string): void {\n    if (this.hasSeatState(row, seat, state)) {\n      this.unsetSeatState(row, seat, state);\n    } else {\n      this.setSeatState(row, seat, state);\n    }\n  }\n\n  /**\n   * Returns the position of active (selected) seat or null if no seat is active.\n   */\n  public getActiveSeat(): HallPlanSeatPos {\n    return this.activeSeatPos;\n  }\n\n  /**\n   * Checks whether the seat at the specified position is active.\n   */\n  public isSeatActive(seatPos: HallPlanSeatPos): boolean {\n    if (this.activeSeatPos) {\n      const { row, seat } = this.activeSeatPos;\n      return row === seatPos.row && seat === seatPos.seat;\n    }\n    return false;\n  }\n\n  /**\n   * Sets the seat active / inactive (i.e. selected or not).\n   */\n  public setSeatActive(seatPos?: HallPlanSeatPos): void {\n    // Deactivate the former one\n    if (!seatPos || !this.isSeatActive(seatPos)) {\n      const formerSeatPos = this.getActiveSeat();\n      if (formerSeatPos) {\n        const { row, seat } = formerSeatPos;\n        const seatElem = this.elem.querySelector(\n          `.hall-plan__seat[data-row=\"${row}\"][data-seat=\"${seat}\"]`);\n        if (seatElem) {\n          removeClass(seatElem as HTMLElement, 'hall-plan__seat--active');\n        }\n      }\n    }\n    // Activate the new one\n    if (seatPos && !this.isSeatActive(seatPos)) {\n      const { row, seat } = seatPos;\n      const seatElem = this.elem.querySelector(\n        `.hall-plan__seat[data-row=\"${row}\"][data-seat=\"${seat}\"]`) as HTMLElement;\n      if (seatElem) {\n        addClass(seatElem, 'hall-plan__seat--active');\n      }\n    }\n    // Update internal state\n    this.activeSeatPos = seatPos ? { ...seatPos } : null;\n  }\n\n  /**\n   * Returns maximum seat count in row.\n   */\n  public getMaxSeatCountInRow(): number {\n    let max = 0;\n    for (let i = 1; i <= this.getRowCount(); i++) {\n      const count = this.getSeatCount(i);\n      if (count > max) {\n        max = count;\n      }\n    }\n    return max;\n  }\n\n  /**\n   * Renders the hall scheme as DOM.\n   *\n   * @return {HTMLDivElement} Root DOM element of the widget.\n   */\n  public render(): HTMLDivElement {\n    const rowsElem: HTMLDivElement = document.createElement('div');\n    rowsElem.className = 'hall-plan__rows';\n\n    for (let i = 1; i <= this.getRowCount(); i++) {\n      const rowElem: HTMLDivElement = document.createElement('div');\n      rowElem.className = 'hall-plan__row';\n      rowElem.dataset.row = i.toString();\n\n      if (this.rowNumbersLeft) {\n        const rowNumElem: HTMLDivElement = document.createElement('div');\n        rowNumElem.className = 'hall-plan__row-number';\n        rowNumElem.textContent = i.toString();\n        rowElem.appendChild(rowNumElem);\n      }\n\n      rowElem.appendChild(this.renderRowContent(i));\n\n      if (this.rowNumbersRight) {\n        const rowNumElem: HTMLDivElement = document.createElement('div');\n        rowNumElem.className = 'hall-plan__row-number';\n        rowNumElem.textContent = i.toString();\n        rowElem.appendChild(rowNumElem);\n      }\n\n      rowsElem.appendChild(rowElem);\n    }\n\n    const classes = ['hall-plan', `hall-plan--${this.seatDirection}`];\n    if (this.selectable) {\n      classes.push('hall-plan--selectable');\n    }\n    if (this.selectable || this.onSeatClick || this.onSeatContextMenu) {\n      classes.push('hall-plan--clickable');\n    }\n    addClass(this.elem, ...classes);\n    this.elem.innerHTML = '';\n    if (this.showScreen) {\n      this.elem.appendChild(this.renderScreen());\n    }\n    this.elem.appendChild(rowsElem);\n\n    return this.elem;\n  }\n\n  private renderScreen(): HTMLDivElement {\n    const wrap: HTMLDivElement = document.createElement('div');\n    wrap.className = 'hall-plan__screen-wrap';\n\n    if (this.rowNumbersLeft) {\n      const spacer: HTMLDivElement = document.createElement('div');\n      spacer.className = 'hall-plan__screen-spacer';\n      wrap.appendChild(spacer);\n    }\n\n    const screen: HTMLDivElement = document.createElement('div');\n    screen.className = 'hall-plan__screen';\n    screen.innerHTML = screenSvg;\n    wrap.appendChild(screen);\n\n    const text: HTMLDivElement = document.createElement('div');\n    text.className = 'hall-plan__screen-text';\n    text.textContent = this.screenText;\n    screen.appendChild(text);\n\n    if (this.rowNumbersRight) {\n      const spacer: HTMLDivElement = document.createElement('div');\n      spacer.className = 'hall-plan__screen-spacer';\n      wrap.appendChild(spacer);\n    }\n\n    return wrap;\n  }\n\n  /**\n   * @param {integer} row Row number starting from 1.\n   */\n  private renderRowContent(row: number): HTMLDivElement {\n    const rowElem: HTMLDivElement = document.createElement('div');\n    rowElem.className = 'hall-plan__row-content';\n\n    const totalSpacing = this.getMaxSeatCountInRow();\n    const cellWidth = (100 / totalSpacing).toFixed(4) + '%';\n    let spacingRendered = 0;\n    let seatNumber = 1;\n    for (const seatSequence of this.scheme.rows[row - 1]) {\n      // Render offsets as invisible seats holding space.\n      // This method allows configuring sizes in CSS.\n      const offset = seatSequence.offset || 0;\n      spacingRendered += offset;\n      for (let j = 0; j < offset; j++) {\n        const spacerElem: HTMLDivElement = document.createElement('div');\n        spacerElem.className = 'hall-plan__spacer';\n        spacerElem.style.width = cellWidth;\n        rowElem.appendChild(spacerElem);\n      }\n      // Render seats\n      const count = seatSequence.seats || 0;\n      spacingRendered += count;\n      for (let j = 0; j < count; j++) {\n        const seatClasses = this.getSeatStates(row, seatNumber)\n          .map(state => 'hall-plan__seat--state_' + state);\n        if (\n          this.activeSeatPos &&\n          this.activeSeatPos.row === row &&\n          this.activeSeatPos.seat === seatNumber\n        ) {\n          seatClasses.push('hall-plan__seat--active');\n        }\n        seatClasses.unshift('hall-plan__seat');\n\n        const spacerElem: HTMLDivElement = document.createElement('div');\n        spacerElem.className = 'hall-plan__spacer';\n        spacerElem.style.width = cellWidth;\n\n        const seatElem: HTMLDivElement = document.createElement('div');\n        seatElem.className = seatClasses.join(' ');\n        seatElem.dataset.row = row.toString();\n        seatElem.dataset.seat = seatNumber.toString();\n        seatElem.textContent = seatNumber.toString();\n\n        spacerElem.appendChild(seatElem);\n        rowElem.appendChild(spacerElem);\n\n        seatNumber++;\n      }\n    }\n\n    // Render spacing at the end\n    const spacingLeft = totalSpacing - spacingRendered;\n    for (let j = 0; j < spacingLeft; j++) {\n      const spacerElem: HTMLDivElement = document.createElement('div');\n      spacerElem.className = 'hall-plan__spacer';\n      spacerElem.style.width = cellWidth;\n      rowElem.appendChild(spacerElem);\n    }\n\n    return rowElem;\n  }\n\n  private updateAllSeatStates(): void {\n    const seatNodes = this.elem.querySelectorAll('.hall-plan__seat');\n    const seatElems = Array.prototype.slice.call(seatNodes);\n    for (const seatElem of seatElems) {\n      const row = parseInt(seatElem.dataset.row, 10);\n      const seat = parseInt(seatElem.dataset.seat, 10);\n      const seatClasses = this.getSeatStates(row, seat)\n          .map(state => 'hall-plan__seat--state_' + state);\n      seatClasses.unshift('hall-plan__seat');\n      seatElem.className = seatClasses.join(' ');\n    }\n  }\n\n  private updateSeatStates(row: number, seat: number): void {\n    const seatElem = this.elem.querySelector(\n      `.hall-plan__seat[data-row=\"${row}\"][data-seat=\"${seat}\"]`);\n    if (seatElem) {\n      const seatClasses = this.getSeatStates(row, seat)\n        .map(state => 'hall-plan__seat--state_' + state);\n      seatClasses.unshift('hall-plan__seat');\n      seatElem.className = seatClasses.join(' ');\n    }\n  }\n\n  private bindEventHandlers() {\n    this.elem.addEventListener('click', this.handleMouseClick);\n    this.elem.addEventListener('contextmenu', this.handleMouseClick);\n  }\n\n  private unbindEventHandlers() {\n    this.elem.removeEventListener('click', this.handleMouseClick);\n    this.elem.removeEventListener('contextmenu', this.handleMouseClick);\n  }\n\n  private handleMouseClick = (event: MouseEvent) => {\n    const seatElem = closest(event.target as HTMLElement, '.hall-plan__seat');\n    if (seatElem) {\n      const seatPos: HallPlanSeatPos = {\n        row: +seatElem.dataset.row,\n        seat: +seatElem.dataset.seat,\n      };\n      const handler = event.type === 'click' ? this.onSeatClick : this.onSeatContextMenu;\n      if (this.selectable && event.type === 'click') {\n        this.setSeatActive(seatPos);\n      }\n      if (handler) {\n        handler.call(this, seatPos, event);\n      }\n    }\n  }\n}\n","export default \"<svg id=\\\"Слой_2\\\" data-name=\\\"Слой 2\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 694 60\\\"><defs><style>.cls-1{fill:url(#linear-gradient);}.cls-2{fill:#d9d9d9;}.cls-3{fill:#e6e6e6;}</style><linearGradient id=\\\"linear-gradient\\\" x1=\\\"346.5\\\" y1=\\\"60\\\" x2=\\\"346.5\\\" y2=\\\"16.89\\\" gradientUnits=\\\"userSpaceOnUse\\\"><stop offset=\\\"0\\\" stop-color=\\\"#fff\\\"/><stop offset=\\\"1\\\" stop-color=\\\"#e6e6e6\\\"/></linearGradient></defs><title>Screen</title><path class=\\\"cls-1\\\" d=\\\"M22,43,17,60H676l-4-19S457,15,338,17,22,43,22,43Z\\\"/><path class=\\\"cls-2\\\" d=\\\"M495.88,27.34c80.23,3.88,167,14.67,177.74,16a2.26,2.26,0,0,0,1.9-.67l17.87-18.38a2.14,2.14,0,0,0-1.19-3.61c-16.34-2.23-79.51-10.39-162.91-15.59C436.24-.69,353.5,0,346.51.06s-88.75-.75-181.8,5.05C81.31,10.31,18.14,18.47,1.8,20.7A2.14,2.14,0,0,0,.61,24.31L18.48,42.69a2.26,2.26,0,0,0,1.9.67c10.71-1.35,97.51-12.14,177.74-16,77.62-3.76,144.46-3.06,148.39-3S418.26,23.58,495.88,27.34Z\\\"/><path class=\\\"cls-3\\\" d=\\\"M495,29.5C574.79,33.34,661.09,44,671.74,45.36a2.23,2.23,0,0,0,1.88-.66l17.77-18.19a2.12,2.12,0,0,0-1.18-3.58c-16.24-2.2-79.05-10.29-162-15.43-92.51-5.74-174.77-5.07-181.73-5s-88.24-.74-180.75,5C82.84,12.64,20,20.73,3.79,22.93a2.12,2.12,0,0,0-1.18,3.58L20.38,44.7a2.23,2.23,0,0,0,1.88.66C32.91,44,119.21,33.34,199,29.5c77.17-3.72,143.62-3,147.53-3S417.85,25.78,495,29.5Z\\\"/></svg>\\n\";"],"sourceRoot":""}